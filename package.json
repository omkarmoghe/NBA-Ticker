{
  "name": "nba-ticker",
  "displayName": "NBA Ticker",
  "description": "Simple live(ish) NBA scores in your status bar.",
  "version": "0.3.0",
  "engines": {
    "vscode": "^1.48.0"
  },
  "publisher": "omkarmoghe",
  "license": "See license in LICENSE.",
  "categories": [
    "Other"
  ],
  "keywords": [
    "nba",
    "live",
    "scores",
    "ticker"
  ],
  "icon": "images/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/omkarmoghe/NBA-Ticker.git"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "NBA Ticker",
      "properties": {
        "nba-ticker.format": {
          "markdownDescription": "Specifies how the game info should be displayed. Defaults to `\"${vTeam} ${vScore} : ${hScore} ${hTeam} @ ${status}\"`, which looks like `GSW 42 : 24 LAL @ 4:20 1st`. The available wildcards are:\n- `${vTeam}`: The visiting team's abbreviated name, (e.g. `\"GSW\"`)\n- `${vScore}`: The visiting team's score\n- `${homeTeam}`: The home team's abbreviated name, (e.g. `\"LAL\"`)\n- `${homeScore}`: The home team's score\n- `${status}`: The status of the game\n  - If the game hasn't started yet, this will be the scheduled start time (e.g. `\"9:30 PM\"`) in your local UTC offset.\n  - If the game is ongoing, this will be either `\"<TIME LEFT IN PERIOD> <PERIOD>\"` (e.g. `\"4:20 1st\"`), `\"End of 1st\"`, or `\"Halftime\"`\n  - If the game is over, this will be `\"Final\"`\n  - If the status is unknown, this will be `\"TBD\"`",
          "type": "string",
          "default": "${vTeam} ${vScore} : ${hScore} ${hTeam} @ ${status}"
        },
        "nba-ticker.pollDelaySeconds": {
          "markdownDescription": "Specifies how long to wait before fetching new game data from the API. The [balldontlie API](https://www.balldontlie.io/#considerations-3) updates games every ~10 minutes, so polling faster than that is pointless. Defaults to `60` seconds, i.e. every minute.",
          "type": "number",
          "default": 60,
          "minimum": 5,
          "maximum": 600
        },
        "nba-ticker.priority": {
          "markdownDescription": "Specifies the ticker's priority relative to other items in the status bar. **Higher values are shows more to the left.**",
          "type": "number",
          "default": 0,
          "minimum": 0
        },
        "nba-ticker.side": {
          "description": "Specifies which side of the status bar to display the ticker.",
          "type": "string",
          "enum": [
            "left",
            "right"
          ],
          "default": "right"
        },
        "nba-ticker.teamFilter": {
          "markdownDescription": "Specifies which teams games are shown for; other teams are ignored. All teams will be shown if the array is empty (`[]`). Use abbreviated team names (e.g. `\"GSW\"`, `\"LAL\"`).",
          "type": "array",
          "default": [],
          "maxItems": 30
        },
        "nba-ticker.tickerDelaySeconds": {
          "markdownDescription": "Specifies how many seconds to show each score. Defaults to `10` seconds. Allowed values are [`1`, `60`].",
          "type": "number",
          "default": 10,
          "minimum": 1,
          "maximum": 60
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.0",
    "@types/node": "^14.11.10",
    "@types/vscode": "^1.48.0",
    "@typescript-eslint/eslint-plugin": "^4.0",
    "@typescript-eslint/parser": "^4.0",
    "eslint": "^7.11.0",
    "glob": "^7.1.6",
    "mocha": "^8.2.0",
    "typescript": "^4.0",
    "vscode-test": "^1.4.0"
  },
  "dependencies": {
    "axios": "^0.20.0",
    "moment": "^2.29.1"
  }
}
