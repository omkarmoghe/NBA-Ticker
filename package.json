{
	"name": "nba-ticker",
	"displayName": "NBA Ticker",
	"description": "Simple live(ish) NBA scores in your status bar.",
	"version": "0.0.2",
	"engines": {
		"vscode": "^1.48.0"
	},
	"publisher": "omkarmoghe",
	"license": "See license in LICENSE.",
	"categories": [
		"Other"
	],
	"keywords": [
		"nba",
		"live",
		"scores",
		"ticker"
	],
	"icon": "images/icon.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/omkarmoghe/NBA-Ticker.git"
	},
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "nba-ticker.updateScores",
				"title": "Update Scores",
				"category": "NBA Ticker"
			}
		],
		"configuration": {
			"title": "NBA Ticker",
			"properties": {
				"nba-ticker.side": {
					"description": "Specifies which side of the status bar to display the ticker.",
					"type": "string",
					"enum": ["left", "right"],
					"default": "right"
				},
				"nba-ticker.priority": {
					"markdownDescription": "Specifies the ticker's priority relative to other items in the status bar. **Higher values are shows more to the left.**",
					"type": "number",
					"default": 0,
					"minimum": 0
				},
				"nba-ticker.teamFilter": {
					"markdownDescription": "Specifies which teams games are shown for; other teams are ignored. All teams will be shown if the array is empty (`[]`). Use abbreviated team names (e.g. `\"GSW\"`, `\"LAL\"`).",
					"type": "array",
					"default": []
				},
				"nba-ticker.pollDelaySeconds": {
					"markdownDescription": "Specifies how long to wait before fetching new game data from the API. The [balldontlie API](https://www.balldontlie.io/#considerations-3) updates games every ~10 minutes, so polling faster than that is pointless. Defaults to `60` seconds, i.e. every minute.",
					"type": "number",
					"default": 60,
					"minimum": 5,
					"maximum": 600
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.48.0",
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.0",
		"@types/node": "^14.0.27",
		"eslint": "^7.6.0",
		"@typescript-eslint/eslint-plugin": "^3.8.0",
		"@typescript-eslint/parser": "^3.8.0",
		"glob": "^7.1.6",
		"mocha": "^8.0.1",
		"typescript": "^3.8.3",
		"vscode-test": "^1.4.0"
	},
	"dependencies": {
		"axios": "^0.19.2",
		"moment": "^2.27.0"
	}
}
